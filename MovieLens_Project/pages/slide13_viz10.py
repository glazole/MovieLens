from dash import html, dcc
import plotly.express as px
import pandas as pd
import ast

def get_layout(data):
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    df = data["movies_total"]

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –ø–æ–ª—è
    df['ml_avg_rating'] = pd.to_numeric(df['ml_avg_rating'], errors='coerce')
    df['avgRating_imdb'] = pd.to_numeric(df['avgRating_imdb'], errors='coerce')
    df['rating_kp'] = pd.to_numeric(df['rating_kp'], errors='coerce')
    df['voteAvg_tmdb'] = pd.to_numeric(df['voteAvg_tmdb'], errors='coerce')

    # –£–¥–∞–ª–∏–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    filtered = df.dropna(subset=['ml_avg_rating', 'avgRating_imdb', 'voteAvg_tmdb', 'rating_kp', 'genres_ml']).copy()

    # –ü–∞—Ä—Å–∏–º –∂–∞–Ω—Ä—ã: –ø–æ–¥–¥–µ—Ä–∂–∫–∞ '|' –∏ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —Å–ø–∏—Å–∫–æ–≤
    def parse_genres(val):
        if pd.isna(val):
            return []
        if isinstance(val, str):
            val = val.strip()
            if val.startswith("[") and val.endswith("]"):
                try:
                    parsed = ast.literal_eval(val)
                    return parsed if isinstance(parsed, list) else []
                except:
                    return []
            elif '|' in val:
                return val.split('|')
        return []

    filtered['genres_ml'] = filtered['genres_ml'].apply(parse_genres)

    # print("‚ñ∂ genres_ml –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞:", filtered['genres_ml'].head())

    # –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∂–∞–Ω—Ä—ã
    exploded = filtered.explode('genres_ml').dropna(subset=['genres_ml'])
    # print("‚ñ∂ –ö–æ–ª-–≤–æ —Å—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ explode:", len(exploded))
    # print("‚ñ∂ –ü—Ä–∏–º–µ—Ä—ã –∂–∞–Ω—Ä–æ–≤:", exploded['genres_ml'].unique()[:10])

    # One-hot –∫–æ–¥–∏—Ä–æ–≤–∫–∞
    genre_dummies = pd.get_dummies(exploded['genres_ml'])
    # print("‚ñ∂ –ö–æ–ª–æ–Ω–∫–∏ –∂–∞–Ω—Ä–æ–≤:", genre_dummies.columns.tolist())

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏
    matrix = pd.concat([genre_dummies, exploded[['ml_avg_rating', 'avgRating_imdb', 'voteAvg_tmdb', 'rating_kp']]], axis=1)

    # –°—Ç—Ä–æ–∏–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É
    correlation = matrix.corr(numeric_only=True).round(2)

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ –ø–æ –∂–∞–Ω—Ä–∞–º –∏ –∫–æ–ª–æ–Ω–∫–∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏
    corr_genres_ratings = correlation[['ml_avg_rating', 'avgRating_imdb', 'voteAvg_tmdb', 'rating_kp']].drop(['ml_avg_rating', 'avgRating_imdb', 'voteAvg_tmdb', 'rating_kp'])

    if corr_genres_ratings.empty:
        # print("‚ö† –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –ø—É—Å—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å –∏—Å—Ö–æ–¥–Ω—ã–µ –∂–∞–Ω—Ä—ã.")
        return html.Div([
            html.H2("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É –∂–∞–Ω—Ä–∞–º–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏", className="slide-title"),
            html.Hr(),
            html.Div("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏."),
            html.Div("13", className="page-number"),
            html.Div([
                dcc.Link("‚ùÆ", href="/slide12", className="circle-nav-btn prev"),
                dcc.Link("‚ùØ", href="/slide14", className="circle-nav-btn next")
            ], className="circle-nav-container")
        ])

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
    fig = px.imshow(
        corr_genres_ratings,
        text_auto=True,
        aspect='auto',
        color_continuous_scale='RdBu_r',
        title='üé≠ –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –∂–∞–Ω—Ä–æ–≤ —Å —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏ MovieLens –∏ IMDb'
    )

    fig.update_layout(
        xaxis_title='–†–µ–π—Ç–∏–Ω–≥',
        yaxis_title='–ñ–∞–Ω—Ä—ã',
        height=700
    )

    return html.Div([
        html.H2("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É –∂–∞–Ω—Ä–∞–º–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏", className="slide-title"),
        html.Hr(),
        dcc.Graph(figure=fig),
        html.Div("13", className="page-number"),
        html.Div([
            dcc.Link("‚ùÆ", href="/slide12", className="circle-nav-btn prev"),
            dcc.Link("‚ùØ", href="/slide14", className="circle-nav-btn next")
        ], className="circle-nav-container")
    ])
